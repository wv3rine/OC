1. Разработать программы клиента и сервера, взаимодействующих 
через разделяемую память с использованием функций UNIX SYSTEM V. 
Клиент генерирует случайные числа в том же диапазоне, что и ранее 
рассмотренный на семинаре пример. Сервер осуществляет их вывод.
Необходимо обеспечить корректное завершение работы для одного клиента 
и сервера, при котором удаляется сегмент разделяемой памяти и завершается 
работа обеих программ независимо от того, какая из них инициировала завершение.
Предложить и реализовать свой вариант корректного завершения. 
Описать этот вариант в отчете.

Схема работы: клиент и сервер общаются через одну shmem, все как в примере и 
в описании задания. Для корректного завершения создана еще одна разделяемая
память (дескриптор close_sh_id), которая принимает два значения: 0, если 
пользователь не нажал CTRL+C, и -1 иначе. Соответственно циклы прерываются,
если *close_share == -1, затем происходит чистка. Для корректного завершения
программ нужно нажать CTRL+C: тогда этот сигнал перехватит sigfunc, который
с задержкой присвоит *close_share = -1 (задержка в 2 секунды нужна для синхронизации.
Логичнее и обобщеннее было использователь вообще mutex и даже тогда возможно не
пришлось бы создавать еще одну разделяемую память, но мы на тот момент не знали по 
семинарам о механизамх синхронизации, но и так тоже неплохо) и в зависимости от программы 
(клиент или сервер) удалит память, за которую он отвечает. Так же о правильном удалении 
памяти говорит то, что если запускать server.o, то будут выводиться только нули, а 
не значение, которое там бы могло остаться

Фотоотчет прикреплен

Карамов Степан Геннадевьич БПИ212

Вариант 15

Задача о клумбе – 1. На клумбе растет 40 цветов, за ними 
непрерывно следят два процесса–садовника и поливают увядшие цветы, 
при этом оба садовника очень боятся полить один и тот же цветок, 
который еще не начал вянуть. Создать приложение, моделирующее 
состояния цветков на клумбе и действия садовников. Сервер 
используется для изменения состояния цветов, каждый садовник — 
отдельный клиент

Сценарий. Есть программа-сервер, которая хранит массив из 40 интов, принимающих
два значения - 0, если соответствующий цветок не полит, и 1 иначе. Программа создает
сокет сервера (вызов CreateUDPServerSocket) по введеному айпи и порту и в зависимости
от количества клиентов (введенных с командной строки). Есть два потока: один из потоков 
отвечает за увядание цветов (раз в пять секунд выбирает три случайных индекса, равных 1, и 
меняет их значения на 0), а другой отвечает за отправление сообщений к садовников и их принятию. Клиент - 
садовник с именем и адресом и портом сада (вводится с командной строки). Производит 20 поливок (20 раз отправляет сообщение) 
(это сделано для большей безопасности). Заметим, что из-за особенностей UDP, в отличие от TCP, здесь не происходит прямого
подключения к серверу: общение ведется исключительно отправками сообщенийСервер получает от клиента его имя, клиент 
от сервера - номер политого цветка. Фактически можно было бы сделать и без информации, но так понятнее. 
Еще одна особенность архитектуры - все происходит именно на сервере, клиент не знает информацию о всех 
цветках: мне это показалось логичнее, что основная логика лежит на сервере, несмотря на то, что "садовник поливает цветы", 
а здесь как будто "сад поливает цветы, используя садовника". Для корректного завершения работы нужно нажать CTRL+Z при 
завершении работы всех клиентов или подключить клиента с именем "Уборщик" (клиент при этом не прекращают свою работу:
так тоже можно было сделать, но мне показалось логичнее оставить так).
Так же для удобства на экране выводится некоторая дополнительная информация для улучшенного понимания
модели: это не прописано в задании, но так становится понятно, что происходит, особенно считая, что
сервер и клиент почти не обмениваются информацией.
Видео и скриншот по работе с программой прикреплены.

Большое отличие от ИДЗ-3 в том, что здесь нет как такового подключения, поэтому архитектура программы ForkN (когда каждый
поток отвечает за своего клиента) не имеет смысла: у нас есть только два потока в программе сервера - отвечающий за обновление
цветов и за сообщения. В остальном все почти точно так же.

